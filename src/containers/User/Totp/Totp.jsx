import React from "react";
import { Card, Spinner, P } from "pi-ui";
import useTotp, { useUserTotpVerified } from "../hooks/useTotp";
import VerifyTotp from "./Verify";
import SetTotp from "./Set";
import useModalContext from "src/hooks/utils/useModalContext";
import ModalConfirm from "src/components/ModalConfirm";

const Totp = () => {
  const { loading, totp, onVerifyTotp, onSetTotp } = useTotp();
  const { hasTotp, onSetHasTotp } = useUserTotpVerified();
  const [handleOpenModal, handleCloseModal] = useModalContext();

  const handleResetTotp = (code, cb) => () =>
    onSetTotp(code).then(() => {
      onSetHasTotp(false);
      cb();
    });

  const handleVerifyTotp = (code, cb) => () =>
    onVerifyTotp(code).then(() => {
      onSetHasTotp(true);
      cb();
    });

  const handleOpenTOTPModal = (shouldShowResetInstructions = true) => (
    code,
    cb
  ) => {
    // if TOTP is NOT set on the account, show the instructions to SET
    const verifyProps = {
      title: "Verify TOTP",
      message: (
        <P>
          You are about to activate the 2FA on your account.{" "}
          <b>
            Please remember to save the backup key. This key will be used in
            case you lose access to your TOTP authenticator.{" "}
          </b>
          The backup key should be treated the same way you treat a password and
          should not be stored digitally!
        </P>
      ),
      successTitle: "2FA activated",
      successMessage: (
        <P>
          <b>Your account now has the 2FA enabled.</b> You'll be required to
          inform the code generated by the authenticator app everytime you want
          to perform a login action.
        </P>
      ),
      onClose: handleCloseModal,
      onSubmit: handleVerifyTotp(code, cb)
    };
    // if TOTP is set on the account, show the instructions to RESET
    const resetProps = {
      title: "Reset TOTP",
      message:
        "You are about to delete the 2FA on your account. Please keep in mind that you will not be required to type the code anymore.",
      successTitle: "Reset 2FA",
      successMessage: <b>You have disabled the 2FA on your account.</b>,
      onClose: handleCloseModal,
      onSubmit: handleResetTotp(code, cb)
    };

    handleOpenModal(
      ModalConfirm,
      shouldShowResetInstructions ? resetProps : verifyProps
    );
  };

  return loading && !hasTotp ? (
    <div className="justify-center">
      <Spinner invert />
    </div>
  ) : (
    <Card paddingSize="small">
      <SetTotp totp={totp} isAlreadySet={hasTotp} />
      <VerifyTotp
        onVerify={handleOpenTOTPModal(hasTotp)}
        title={hasTotp ? "Reset 2FA" : "Verify Code"}
        buttonLabel={hasTotp ? "Reset" : "Verify"}
      />
    </Card>
  );
};

export default Totp;
